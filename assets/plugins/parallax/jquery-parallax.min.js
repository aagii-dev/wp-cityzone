! function(t, i, n) {
  function e(t, i) {
      var n = null;
      return function() {
          var e = this,
              a = arguments;
          clearTimeout(n), n = setTimeout(function() {
              t.apply(e, a)
          }, i)
      }
  }

  function a(t, i) {
      this.el = t, this.$el = n(t), this.animationFrame = null, this.scrolling = !1, this.currentTransforms = [], this.firstTops = [], this.speeds = [], this._setup(), this._events()
  }

  function r(t) {
      var i = Array.prototype.slice.call(arguments, 1),
          e = n(this),
          r = e.data("parallax");
      r || e.data("parallax", r = new a(this, t)), "string" == typeof t && r[t] && "_" !== t[0] && r[t].apply(r, i)
  }! function() {
      for (var t = 0, n = ["ms", "moz", "webkit", "o"], e = 0; e < n.length && !i.requestAnimationFrame; ++e) i.requestAnimationFrame = i[n[e] + "RequestAnimationFrame"], i.cancelAnimationFrame = i[n[e] + "CancelAnimationFrame"] || i[n[e] + "CancelRequestAnimationFrame"];
      i.requestAnimationFrame || (i.requestAnimationFrame = function(n, e) {
          var a = (new Date).getTime(),
              r = Math.max(0, 16 - (a - t)),
              o = i.setTimeout(function() {
                  n(a + r)
              }, r);
          return t = a + r, o
      }), i.cancelAnimationFrame || (i.cancelAnimationFrame = function(t) {
          clearTimeout(t)
      })
  }(), Function.prototype.bind || (Function.prototype.bind = function(t) {
      var i = this;
      return function() {
          return i.apply(t, arguments)
      }
  }), a.prototype._setup = function() {
      this.$window = n(i), this.lastScrollTop = null, this._cacheValues(), this._parallax()
  }, a.prototype._events = function() {
      this.$window.on("scroll.parallax.begin", this._beginScroll.bind(this)), this.$window.on("scroll.parallax.debounce", e(function() {
          cancelAnimationFrame(this.animationFrame), this.scrolling = !1, this.$window.on("scroll.parallax.begin", this._beginScroll.bind(this))
      }.bind(this), 250)), this.$window.on("resize.parallax", e(this.refresh.bind(this), 250))
  }, a.prototype._beginScroll = function() {
      this.scrolling || (this._go(), this.scrolling = !0, this.$window.off("scroll.parallax.begin"))
  }, a.prototype._cacheValues = function() {
      var t = this;
      this.$el.each(function(i, e) {
          var a = n(this),
              r = t.currentTransforms[i],
              o = a.offset().top,
              s = void 0 !== r ? o - r : o;
          t.firstTops[i] = s, t.speeds[i] = a.attr("data-speed")
      })
  }, a.prototype._go = function() {
      this.animationFrame = requestAnimationFrame(this._go.bind(this)), this._parallax()
  }, a.prototype._isInView = function(t) {
      var n = t.getBoundingClientRect();
      return n.top < i.innerHeight && n.bottom > 0
  }, a.prototype._parallax = function() {
      var t = this.$window.scrollTop();
      if (t === this.lastScrollTop) return !1;
      this.lastScrollTop = t;
      for (var i = 0, e = this.$el.length; e > i; i++) {
          var a = this.$el[i];
          if (this._isInView(a)) {
              var r = n(a);
              this.currentTransforms[i] = (t - this.firstTops[i]) * this.speeds[i], r.css("transform", "translate3d(0, " + this.currentTransforms[i] + "px,0)")
          }
      }
  }, a.prototype.refresh = function() {
      this.lastScrollTop = null, this._cacheValues(), this._parallax()
  }, n.fn.jQueryParallax = r
}(document, window, jQuery);